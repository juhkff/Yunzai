import{_ as _sfc_main$1}from"./Step1.vue_vue_type_script_setup_true_lang.js";import Step2 from"./Step2.js";import{u as useStepStore}from"./hooks.js";import{d as defineComponent,s as inject,r as ref,an as onMounted,w as watch,c as resolveComponent,o as openBlock,e as createElementBlock,h as createBlock,m as toDisplayString,z as normalizeClass,y as unref}from"./index.js";const _hoisted_1={key:3},_sfc_main=defineComponent({__name:"TransferBox",setup(__props){const isMobile=inject("isMobile",ref(!1)),stepStore=useStepStore(),loading=ref(!0),current=ref(1),stepSize=ref("default");return isMobile.value&&(stepSize.value="small"),onMounted((()=>{return __this=this,__arguments=null,generator=function*(){yield stepStore.updateStatus(),watch((()=>stepStore.status.state),(state=>{current.value=0===state?1:2}),{immediate:!0}),loading.value=!1},new Promise(((resolve,reject)=>{var fulfilled=value=>{try{step(generator.next(value))}catch(e){reject(e)}},rejected=value=>{try{step(generator.throw(value))}catch(e){reject(e)}},step=x=>x.done?resolve(x.value):Promise.resolve(x.value).then(fulfilled,rejected);step((generator=generator.apply(__this,__arguments)).next())}));var __this,__arguments,generator})),(_ctx,_cache)=>{const _component_a_skeleton=resolveComponent("a-skeleton");return openBlock(),createElementBlock("div",{class:normalizeClass(["transfer-box",{"is-mobile":unref(isMobile)}])},[loading.value?(openBlock(),createBlock(_component_a_skeleton,{key:0,active:""})):1===current.value?(openBlock(),createBlock(_sfc_main$1,{key:1})):2===current.value?(openBlock(),createBlock(Step2,{key:2})):(openBlock(),createElementBlock("span",_hoisted_1,"error step "+toDisplayString(current.value),1))],2)}}});export{_sfc_main as _};
