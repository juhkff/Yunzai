var __defProp=Object.defineProperty,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value:value}):obj[key]=value;import{d as defineComponent,r as ref,bf as useTransition,C as computed,y as unref,L as watchEffect,w as watch,an as onMounted,bg as TransitionPresets,bh as isNumber,b as _export_sfc,o as openBlock,e as createElementBlock,m as toDisplayString,W as normalizeStyle,bi as withInstall,F as Fragment,f as renderList,h as createBlock,i as withCtx,j as createVNode,bb as Tag,k as createTextVNode,v as createBaseVNode,a2 as Icon,z as normalizeClass,bc as Card}from"./index.js";const CountTo=withInstall(_export_sfc(defineComponent({name:"CountTo",props:{startVal:{type:Number,default:0},endVal:{type:Number,default:2021},duration:{type:Number,default:1500},autoplay:{type:Boolean,default:!0},decimals:{type:Number,default:0,validator:value=>value>=0},prefix:{type:String,default:""},suffix:{type:String,default:""},separator:{type:String,default:","},decimal:{type:String,default:"."},color:{type:String},useEasing:{type:Boolean,default:!0},transition:{type:String,default:"linear"}},emits:["onStarted","onFinished"],setup(props2,{emit:emit}){const source=ref(props2.startVal),disabled=ref(!1);let outputValue=useTransition(source);const value=computed((()=>function(num){if(!num&&0!==num)return"";const{decimals:decimals,decimal:decimal,separator:separator,suffix:suffix,prefix:prefix}=props2;num=Number(num).toFixed(decimals);const x=(num+="").split(".");let x1=x[0];const x2=x.length>1?decimal+x[1]:"",rgx=/(\d+)(\d{3})/;if(separator&&!isNumber(separator))for(;rgx.test(x1);)x1=x1.replace(rgx,"$1"+separator+"$2");return prefix+x1+x2+suffix}(unref(outputValue))));function start(){run(),source.value=props2.endVal}function run(){outputValue=useTransition(source,((a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a})({disabled:disabled,duration:props2.duration,onFinished:()=>emit("onFinished"),onStarted:()=>emit("onStarted")},props2.useEasing?{transition:TransitionPresets[props2.transition]}:{}))}return watchEffect((()=>{source.value=props2.startVal})),watch([()=>props2.startVal,()=>props2.endVal],(()=>{props2.autoplay&&start()})),onMounted((()=>{props2.autoplay&&start()})),{value:value,start:start,reset:function(){source.value=props2.startVal,run()}}}}),[["render",function(_ctx,_cache,$props,$setup,$data,$options){return openBlock(),createElementBlock("span",{style:normalizeStyle({color:_ctx.color})},toDisplayString(_ctx.value),5)}]])),growCardList=[{title:"访问数",icon:"visit-count|svg",value:2e3,total:12e4,color:"green",action:"月"},{title:"成交额",icon:"total-sales|svg",value:2e4,total:5e5,color:"blue",action:"月"},{title:"下载数",icon:"download-count|svg",value:8e3,total:12e4,color:"orange",action:"周"},{title:"成交数",icon:"transaction|svg",value:5e3,total:5e4,color:"purple",action:"年"}],_hoisted_1={class:"md:flex"},_hoisted_2={class:"py-4 px-4 flex justify-between items-center"},_hoisted_3={class:"p-2 px-4 flex justify-between"},_sfc_main=defineComponent({__name:"GrowCard",props:{loading:{type:Boolean}},setup:__props=>(_ctx,_cache)=>(openBlock(),createElementBlock("div",_hoisted_1,[(openBlock(!0),createElementBlock(Fragment,null,renderList(unref(growCardList),((item,index)=>(openBlock(),createBlock(unref(Card),{key:item.title,size:"small",loading:__props.loading,title:item.title,class:normalizeClass(["md:w-1/4 w-full !md:mt-0",{"!md:mr-4":index+1<4,"!mt-4":index>0}])},{extra:withCtx((()=>[createVNode(unref(Tag),{color:item.color},{default:withCtx((()=>[createTextVNode(toDisplayString(item.action),1)])),_:2},1032,["color"])])),default:withCtx((()=>[createBaseVNode("div",_hoisted_2,[createVNode(unref(CountTo),{prefix:"$",startVal:1,endVal:item.value,class:"text-2xl"},null,8,["endVal"]),createVNode(unref(Icon),{icon:item.icon,size:40},null,8,["icon"])]),createBaseVNode("div",_hoisted_3,[createBaseVNode("span",null,"总"+toDisplayString(item.title),1),createVNode(unref(CountTo),{prefix:"$",startVal:1,endVal:item.total},null,8,["endVal"])])])),_:2},1032,["loading","title","class"])))),128))]))});export{_sfc_main as _};
