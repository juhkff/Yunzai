var __async=(__this,__arguments,generator)=>new Promise(((resolve,reject)=>{var fulfilled=value=>{try{step(generator.next(value))}catch(e){reject(e)}},rejected=value=>{try{step(generator.throw(value))}catch(e){reject(e)}},step=x=>x.done?resolve(x.value):Promise.resolve(x.value).then(fulfilled,rejected);step((generator=generator.apply(__this,__arguments)).next())}));import{r as ref,ba as onUnmounted,y as unref,bw as isProdMode,fV as getDynamicProps,w as watch,ad as toRaw,bx as error}from"./index.js";function useTable(tableProps){const tableRef=ref(null),loadedRef=ref(!1),formRef=ref(null);let stopWatch;function getTableInstance(){const table=unref(tableRef);return table||error("The table instance has not been obtained yet, please make sure the table is presented when performing the table operation!"),table}return[function(instance,formInstance){onUnmounted((()=>{tableRef.value=null,loadedRef.value=null})),unref(loadedRef)&&isProdMode()&&instance===unref(tableRef)||(tableRef.value=instance,formRef.value=formInstance,tableProps&&instance.setProps(getDynamicProps(tableProps)),loadedRef.value=!0,null==stopWatch||stopWatch(),stopWatch=watch((()=>tableProps),(()=>{tableProps&&instance.setProps(getDynamicProps(tableProps))}),{immediate:!0,deep:!0}))},{reload:opt=>__async(this,null,(function*(){return yield getTableInstance().reload(opt)})),setProps:props=>{getTableInstance().setProps(props)},redoHeight:()=>{getTableInstance().redoHeight()},setLoading:loading=>{getTableInstance().setLoading(loading)},getDataSource:()=>getTableInstance().getDataSource(),getRawDataSource:()=>getTableInstance().getRawDataSource(),getColumns:({ignoreIndex:ignoreIndex=!1}={})=>{const columns=getTableInstance().getColumns({ignoreIndex:ignoreIndex})||[];return toRaw(columns)},setColumns:columns=>{getTableInstance().setColumns(columns)},setTableData:values=>getTableInstance().setTableData(values),setPagination:info=>getTableInstance().setPagination(info),deleteSelectRowByKey:key=>{getTableInstance().deleteSelectRowByKey(key)},getSelectRowKeys:()=>toRaw(getTableInstance().getSelectRowKeys()),getSelectRows:()=>toRaw(getTableInstance().getSelectRows()),clearSelectedRowKeys:()=>{getTableInstance().clearSelectedRowKeys()},setSelectedRowKeys:keys=>{getTableInstance().setSelectedRowKeys(keys)},getPaginationRef:()=>getTableInstance().getPaginationRef(),getSize:()=>toRaw(getTableInstance().getSize()),updateTableData:(index,key,value)=>getTableInstance().updateTableData(index,key,value),deleteTableDataRecord:rowKey=>getTableInstance().deleteTableDataRecord(rowKey),insertTableDataRecord:(record,index)=>getTableInstance().insertTableDataRecord(record,index),updateTableDataRecord:(rowKey,record)=>getTableInstance().updateTableDataRecord(rowKey,record),findTableDataRecord:rowKey=>getTableInstance().findTableDataRecord(rowKey),getRowSelection:()=>toRaw(getTableInstance().getRowSelection()),getCacheColumns:()=>toRaw(getTableInstance().getCacheColumns()),getForm:()=>unref(formRef),setShowPagination:show=>__async(this,null,(function*(){getTableInstance().setShowPagination(show)})),getShowPagination:()=>toRaw(getTableInstance().getShowPagination()),expandAll:()=>{getTableInstance().expandAll()},expandRows:keys=>{getTableInstance().expandRows(keys)},collapseAll:()=>{getTableInstance().collapseAll()},scrollTo:pos=>{getTableInstance().scrollTo(pos)}}]}export{useTable as u};
