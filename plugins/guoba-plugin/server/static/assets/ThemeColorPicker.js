import{d as defineComponent,cY as CheckOutlined,E as useDesign,b as _export_sfc,c as resolveComponent,o as openBlock,e as createElementBlock,F as Fragment,f as renderList,z as normalizeClass,W as normalizeStyle,j as createVNode}from"./index.js";import{b as baseHandler}from"./index36.js";import"./index35.js";import"./index29.js";import"./ArrowLeftOutlined.js";import"./index2.js";import"./PluginIcon.vue_vue_type_style_index_0_lang.js";import"./FullscreenOutlined.js";import"./index17.js";import"./useWindowSizeFn.js";import"./useContentViewHeight.js";import"./uniqBy.js";import"./RedoOutlined.js";import"./lock.js";const _sfc_main=defineComponent({name:"ThemeColorPicker",components:{CheckOutlined:CheckOutlined},props:{colorList:{type:Array,defualt:[]},event:{type:Number},def:{type:String}},setup(props){const{prefixCls:prefixCls}=useDesign("setting-theme-picker");return{prefixCls:prefixCls,handleClick:function(color){props.event&&baseHandler(props.event,color)}}}}),_hoisted_1=["onClick"];const ThemeColorPicker=_export_sfc(_sfc_main,[["render",function(_ctx,_cache,$props,$setup,$data,$options){const _component_CheckOutlined=resolveComponent("CheckOutlined");return openBlock(),createElementBlock("div",{class:normalizeClass(_ctx.prefixCls)},[(openBlock(!0),createElementBlock(Fragment,null,renderList(_ctx.colorList||[],(color=>(openBlock(),createElementBlock("span",{key:color,onClick:$event=>_ctx.handleClick(color),class:normalizeClass([`${_ctx.prefixCls}__item`,{[`${_ctx.prefixCls}__item--active`]:_ctx.def===color}]),style:normalizeStyle({background:color})},[createVNode(_component_CheckOutlined)],14,_hoisted_1)))),128))],2)}]]);export{ThemeColorPicker as default};
