var __async=(__this,__arguments,generator)=>new Promise(((resolve,reject)=>{var fulfilled=value=>{try{step(generator.next(value))}catch(e){reject(e)}},rejected=value=>{try{step(generator.throw(value))}catch(e){reject(e)}},step=x=>x.done?resolve(x.value):Promise.resolve(x.value).then(fulfilled,rejected);step((generator=generator.apply(__this,__arguments)).next())}));import{d as defineComponent,B as useForm,r as ref,c as resolveComponent,o as openBlock,e as createElementBlock,j as createVNode,y as unref,i as withCtx,k as createTextVNode,x as createCommentVNode,w as watch,A as useMessage}from"./index.js";import BasicForm from"./BasicForm.js";import"./BasicForm.vue_vue_type_style_index_0_lang.js";import{u as useThemeConfigSchemas}from"./miao.data.js";import{s as saveThemeConfig}from"./miao.api.js";import{l as lodash}from"./lodash.default.js";const _hoisted_1={key:0,style:{"text-align":"center"}},_sfc_main=defineComponent({__name:"ThemeConfigForm",props:{model:Object,themeName:String,themeNames:Array,debugThemeName:String},emits:["update:model","update:debugThemeName"],setup(__props,{emit:__emit}){const props=__props,emit=__emit,{createMessage:$message}=useMessage(),showFn=model=>model.debugTheme&&model.currentTheme,[registerFormOrigin,{setFieldsValue:setFieldsValue,updateSchema:updateSchema,validate:validate}]=useForm({schemas:[{field:"debugTheme",label:"调试皮肤",component:"Switch",bottomHelpMessage:"对已有皮肤进行实时调试（需要手动保存）"},{field:"currentTheme",label:"选择皮肤",component:"Select",show:({model:model})=>model.debugTheme,bottomHelpMessage:"若要新增或删除皮肤，请点击右上角的“皮肤”按钮。"},...useThemeConfigSchemas({show:({model:model})=>showFn(model)})],labelWidth:120,labelAlign:"right",labelCol:{xs:24,sm:5},wrapperCol:{xs:24,sm:19},showActionButtonGroup:!1,baseColProps:{span:24}}),showBtn=ref(!1);function registerForm(formAction,formModel){return __async(this,null,(function*(){registerFormOrigin(formAction),yield function(){return __async(this,null,(function*(){watch((()=>props.themeNames),(names=>__async(this,null,(function*(){Array.isArray(names)||(names=[]);let options=(names=names.filter((name=>"default"!==name))).map((name=>({label:name,value:name})));0===options.length&&(yield setFieldsValue({currentTheme:null})),yield updateSchema([{field:"currentTheme",componentProps:{options:options}}])}))),{deep:!0,immediate:!0})}))}(),yield function(formModel){return __async(this,null,(function*(){yield setFieldsValue(props.model),watch((()=>props.model),(()=>setFieldsValue(props.model)),{deep:!0}),watch(formModel,(model=>{emit("update:model",model),showBtn.value=showFn(model);let debugThemeName=showBtn.value&&model.currentTheme||"";emit("update:debugThemeName",debugThemeName)}),{immediate:!0}),watch((()=>formModel.debugTheme),((newVal,oldValue)=>{!0!==newVal||oldValue||(formModel.currentTheme=props.themeName||"")}),{immediate:!0})}))}(formModel)}))}function onSave(){return __async(this,null,(function*(){let values=yield validate(),formData=lodash.omit(values,["debugTheme","currentTheme"]);yield saveThemeConfig(values.currentTheme,formData),$message.success("保存成功~")}))}return(_ctx,_cache)=>{const _component_a_button=resolveComponent("a-button");return openBlock(),createElementBlock("div",null,[createVNode(unref(BasicForm),{onRegister:registerForm}),showBtn.value?(openBlock(),createElementBlock("div",_hoisted_1,[createVNode(_component_a_button,{type:"primary",preIcon:"ant-design:save",onClick:onSave},{default:withCtx((()=>[createTextVNode("保存皮肤配置")])),_:1})])):createCommentVNode("",!0)])}}});export{_sfc_main as _};
