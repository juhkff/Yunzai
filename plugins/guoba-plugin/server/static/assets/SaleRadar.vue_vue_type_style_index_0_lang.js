import{d as defineComponent,r as ref,C as computed,c as resolveComponent,o as openBlock,h as createBlock,i as withCtx,j as createVNode,v as createBaseVNode,W as normalizeStyle,y as unref,bc as Card,a5 as defHttp}from"./index.js";const _sfc_main=defineComponent({__name:"SaleRadar",setup(__props){const imgSrc=ref(""),loading=ref(!1),imgHeight=ref(500),divStyle=computed((()=>{let style={};return style.backgroundImage=`url(${imgSrc.value})`,style.height=`${imgHeight.value}px`,style}));return function(){return __this=this,__arguments=null,generator=function*(){try{loading.value=!0;let res=yield defHttp.get({url:"/home/random-image",responseType:"blob"},{isTransformResponse:!1,isReturnNativeResponse:!0}),img=new Image;imgSrc.value=URL.createObjectURL(res.data),img.src=imgSrc.value,yield new Promise((resolve=>img.onload=resolve)),imgHeight.value=500}finally{loading.value=!1}},new Promise(((resolve,reject)=>{var fulfilled=value=>{try{step(generator.next(value))}catch(e){reject(e)}},rejected=value=>{try{step(generator.throw(value))}catch(e){reject(e)}},step=x=>x.done?resolve(x.value):Promise.resolve(x.value).then(fulfilled,rejected);step((generator=generator.apply(__this,__arguments)).next())}));var __this,__arguments,generator}(),(_ctx,_cache)=>{const _component_a_spin=resolveComponent("a-spin");return openBlock(),createBlock(unref(Card),{class:"random-iamge-card",title:"随机美图",style:{"min-height":"300px"}},{default:withCtx((()=>[createVNode(_component_a_spin,{spinning:loading.value,style:{"min-height":"150px"}},{default:withCtx((()=>[createBaseVNode("div",{class:"img",style:normalizeStyle(divStyle.value)},null,4)])),_:1},8,["spinning"])])),_:1})}}});export{_sfc_main as _};
